version: '3.8'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '80:80'
    environment:
      - NODE_ENV=production
    depends_on:
      - postgresql
    volumes:
      - /app/node_modules
      - .:/app
    networks:
      - anime
  postgresql:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB}
    ports:
      - '5432:5432'
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - anime
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/${DB}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_BOOT_DEVTOOLS_RESTART_ENABLED: ${STATE}
    depends_on:
      - postgresql
    volumes:
      - app-volume:/app
    networks:
      - anime
volumes:
  postgresql:
  app-volume:
networks:
  anime:
    driver: bridge